version: '3.8'

services:
  backend:
    build:
      context: ./Back End  # Assurez-vous que le chemin vers le dossier 'Back End' est correct
    environment:
      NODE_ENV: production
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: automate
    ports:
      - "3000:3000"  # Le port 3000 est mappé pour accéder à l'API backend
    depends_on:
      db:
        condition: service_healthy  # Assurez-vous que la DB est en bonne santé avant de démarrer le backend
    volumes:
      - ./Back End:/usr/src/app  # Monte le dossier 'Back End' dans le conteneur
      - ./frontend:/usr/src/app/frontend  # Monte le dossier 'frontend' dans le conteneur (si nécessaire)
      - ./logs:/usr/src/app/logs  # Volume optionnel pour stocker les logs du backend

  db:
    image: mariadb:10.5  # Utilise l'image de la base de données MariaDB version 10.5
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root  # Mot de passe root pour MariaDB
      MYSQL_DATABASE: automate  # Base de données à créer à l'initialisation
    ports:
      - "3307:3306"  # Le port 3307 est mappé pour la base de données
    volumes:
      - db-data:/var/lib/mysql  # Volume pour la persistance des données de la base
      - ./Bdd/automate:/docker-entrypoint-initdb.d  # Monte les fichiers SQL pour initialiser la DB
    healthcheck:  # Ajouter une vérification de santé pour s'assurer que la base de données est prête
      test: "mysqladmin ping -h localhost -u root -proot"
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

volumes:
  db-data:  # Déclare un volume pour stocker de façon persistante les données de la base de données
